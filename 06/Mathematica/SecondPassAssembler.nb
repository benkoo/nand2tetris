(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.4' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     31472,        749]
NotebookOptionsPosition[     29131,        675]
NotebookOutlinePosition[     29489,        691]
CellTagsIndexPosition[     29446,        688]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Go", " ", "through", " ", "textLineArray", " ", "and", " ", "create", " ",
     "a", " ", "new", " ", "symbolTable", " ", "as", " ", "well", " ", "as", 
    " ", "a", " ", "Label", " ", "removal", " ", 
    RowBox[{"array", "."}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"CollectLabels", "[", 
     RowBox[{"textLineArray_", ",", " ", "symbolTable_"}], "]"}], ":=", 
    "\[IndentingNewLine]", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "\[IndentingNewLine]", " ", 
       RowBox[{
        RowBox[{"n", "=", "1"}], ",", "\[IndentingNewLine]", 
        RowBox[{"romAddress", " ", "=", "1"}], ",", "\[IndentingNewLine]", 
        RowBox[{"labelCandidatesIndexArray", "=", 
         RowBox[{"{", "}"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"labelCandidatesArray", "=", "symbolTable"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"labelCandidate", "=", "\"\<\>\""}]}], "\[IndentingNewLine]", 
       "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"While", "[", 
        RowBox[{
         RowBox[{"n", "<=", 
          RowBox[{"Length", "[", "textLineArray", "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"If", "[", " ", 
           RowBox[{
            RowBox[{"StringStartsQ", "[", 
             RowBox[{
              RowBox[{
              "textLineArray", "\[LeftDoubleBracket]", "n", 
               "\[RightDoubleBracket]"}], ",", " ", "\"\<(\>\""}], "]"}], ",",
             "\[IndentingNewLine]", 
            RowBox[{"(*", " ", "THEN", " ", "*)"}], "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"romAddress", "=", 
              RowBox[{"romAddress", "-", "1"}]}], ";", "\[IndentingNewLine]", 
             
             RowBox[{"labelCandidate", " ", "=", 
              RowBox[{"StringDrop", "[", 
               RowBox[{
                RowBox[{"StringDrop", "[", 
                 RowBox[{
                  RowBox[{
                  "textLineArray", "\[LeftDoubleBracket]", "n", 
                   "\[RightDoubleBracket]"}], ",", "1"}], "]"}], ",", 
                RowBox[{"-", "1"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"MemberQ", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Transpose", "[", "labelCandidatesArray", "]"}], 
                  "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], ",",
                  "labelCandidate"}], " ", "]"}], ",", "\[IndentingNewLine]", 
               
               RowBox[{"(*", " ", 
                RowBox[{
                 RowBox[{
                 "If", " ", "this", " ", "is", " ", "a", " ", "member", " ", 
                  "of", " ", "SymbolTable"}], ",", " ", "then", ",", " ", 
                 RowBox[{
                  RowBox[{"don", "'"}], "t", " ", "do", " ", "anything"}]}], 
                " ", "*)"}], "\[IndentingNewLine]", 
               RowBox[{"Print", "[", 
                RowBox[{
                "labelCandidate", " ", "<>", " ", "\"\<Already Exists\>\""}], 
                "]"}], ",", "\[IndentingNewLine]", 
               RowBox[{"(*", " ", 
                RowBox[{
                 RowBox[{
                 "Else", " ", "if", " ", "this", " ", "is", " ", "a", " ", 
                  "new", " ", "symbol", " ", "member"}], ","}], "*)"}], 
               "\[IndentingNewLine]", 
               RowBox[{"(*", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"Print", "[", 
                  RowBox[{
                  "\"\<Candidate Label:\>\"", "<>", " ", "\"\<Line[\>\"", "<>",
                    " ", 
                   RowBox[{"ToString", "[", "n", "]"}], "<>", "\"\<]\>\"", 
                   " ", "<>", "labelCandidate", "<>", " ", "\"\<->\>\"", "<>",
                    " ", 
                   RowBox[{"ToString", "[", "romAddress", "]"}]}], "]"}], " ",
                  ";"}], "\[IndentingNewLine]", "*)"}], "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"AppendTo", "[", 
                 RowBox[{"labelCandidatesArray", ",", 
                  RowBox[{"{", 
                   RowBox[{"labelCandidate", ",", "romAddress"}], "}"}]}], 
                 "]"}], ";", "\[IndentingNewLine]", 
                RowBox[{"AppendTo", "[", 
                 RowBox[{"labelCandidatesIndexArray", ",", 
                  RowBox[{"{", "n", "}"}]}], "]"}]}]}], "\[IndentingNewLine]",
               "]"}]}]}], "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", 
          RowBox[{"(*", " ", "ELSE", " ", "*)"}], "\[IndentingNewLine]", 
          RowBox[{"romAddress", "++"}], " ", "\[IndentingNewLine]", 
          RowBox[{"n", "++"}]}]}], " ", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
        "labelCandidatesArray", ",", " ", "labelCandidatesIndexArray"}], 
        "}"}]}]}], "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Go", " ", "through", " ", "textLineArray", " ", "and", " ", "create", 
     " ", "a", " ", "new", " ", "symbolTable", " ", "as", " ", "well", " ", 
     "as", " ", "a", " ", "Label", " ", "removal", " ", 
     RowBox[{"array", "."}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"CollectRamAddress", "[", 
     RowBox[{"textLineArray_", ",", " ", "symbolTable_"}], "]"}], ":=", 
    "\[IndentingNewLine]", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "\[IndentingNewLine]", " ", 
       RowBox[{
        RowBox[{"n", "=", "1"}], ",", "\[IndentingNewLine]", 
        RowBox[{"ramAddress", " ", "=", "16"}], ",", "\[IndentingNewLine]", 
        RowBox[{"labelCandidatesIndexArray", "=", 
         RowBox[{"{", "}"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"updatedSymbols", "=", "symbolTable"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"candidateNewSymbol", "=", "\"\<\>\""}]}], 
       "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"While", "[", 
        RowBox[{
         RowBox[{"n", "<=", 
          RowBox[{"Length", "[", "textLineArray", "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"If", "[", " ", 
           RowBox[{
            RowBox[{"StringStartsQ", "[", 
             RowBox[{
              RowBox[{
              "textLineArray", "\[LeftDoubleBracket]", "n", 
               "\[RightDoubleBracket]"}], ",", " ", "\"\<@\>\""}], "]"}], ",",
             "\[IndentingNewLine]", 
            RowBox[{"(*", " ", "THEN", " ", "*)"}], "\[IndentingNewLine]", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"candidateNewSymbol", "=", 
              RowBox[{
               RowBox[{"StringSplit", "[", 
                RowBox[{
                 RowBox[{
                 "textLineArray", "\[LeftDoubleBracket]", "n", 
                  "\[RightDoubleBracket]"}], ",", "\"\<@\>\""}], "]"}], "//", 
               "First"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"StringMatchQ", "[", 
                RowBox[{"candidateNewSymbol", ",", "NumberString"}], "]"}], 
               ",", "\[IndentingNewLine]", 
               RowBox[{"(*", " ", "THEN", " ", "*)"}], "\[IndentingNewLine]", 
               
               RowBox[{"Print", "[", 
                RowBox[{
                "\"\<Not a new symbol:\>\"", "<>", " ", 
                 "candidateNewSymbol"}], "]"}], ",", "\[IndentingNewLine]", 
               RowBox[{"(*", " ", "ELSE", " ", "*)"}], "\[IndentingNewLine]", 
               
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"MemberQ", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Transpose", "[", "updatedSymbols", "]"}], 
                    "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
                   ",", "candidateNewSymbol"}], " ", "]"}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{"(*", " ", 
                  RowBox[{
                   RowBox[{
                   "If", " ", "this", " ", "is", " ", "a", " ", "member", " ",
                     "of", " ", "SymbolTable"}], ",", " ", "then", ",", " ", 
                   RowBox[{
                    RowBox[{"don", "'"}], "t", " ", "do", " ", "anything"}]}],
                   " ", "*)"}], "\[IndentingNewLine]", 
                 RowBox[{"Print", "[", 
                  RowBox[{
                  "\"\< Already Exists: \>\"", "<>", " ", 
                   "candidateNewSymbol"}], " ", "]"}], ",", " ", 
                 "\[IndentingNewLine]", 
                 RowBox[{"(*", " ", 
                  RowBox[{
                   RowBox[{
                   "Else", " ", "if", " ", "this", " ", "is", " ", "a", " ", 
                    "new", " ", "symbol", " ", "member"}], ","}], "*)"}], 
                 "\[IndentingNewLine]", 
                 RowBox[{"(*", 
                  RowBox[{
                   RowBox[{"Print", "[", 
                    RowBox[{
                    "\"\<Candidate Label:\>\"", "<>", " ", "\"\<Line[\>\"", "<>",
                     " ", 
                    RowBox[{"ToString", "[", "n", "]"}], "<>", "\"\<]\>\"", 
                    " ", "<>", "candidateNewSymbol", "<>", " ", "\"\<->\>\"", 
                    "<>", " ", 
                    RowBox[{"ToString", "[", "ramAddress", "]"}]}], "]"}], 
                   " ", ";"}], "*)"}], "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"AppendTo", "[", 
                   RowBox[{"updatedSymbols", ",", 
                    RowBox[{"{", 
                    RowBox[{"candidateNewSymbol", ",", "ramAddress"}], 
                    "}"}]}], "]"}], " ", ";", "\[IndentingNewLine]", 
                  RowBox[{"(*", " ", 
                   RowBox[{"Now", ",", " ", 
                    RowBox[{
                    "increment", " ", "ramAddress", " ", "by", " ", "1"}]}], 
                   "*)"}], "\[IndentingNewLine]", 
                  RowBox[{"ramAddress", "++"}], " ", ";"}]}], 
                "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
              "]"}]}]}], "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", 
          
          RowBox[{"n", "++"}]}]}], " ", "]"}], ";", "\[IndentingNewLine]", 
       "updatedSymbols"}]}], "\[IndentingNewLine]", "]"}]}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.666882120707466*^9, 3.6668821263716183`*^9}, {
  3.666882160788023*^9, 3.666882186912692*^9}, {3.6668822172830677`*^9, 
  3.666882235120153*^9}, {3.6669082382399263`*^9, 3.666908248576109*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.6668839084620447`*^9, 3.666883988663362*^9}, {
   3.6668840585048237`*^9, 3.666884077217606*^9}, 3.666884191453286*^9, {
   3.666884259499053*^9, 3.666884262928982*^9}, {3.6668844465865917`*^9, 
   3.666884529241643*^9}, {3.666884587093356*^9, 3.666884689445179*^9}, {
   3.666884831781748*^9, 3.666884874574876*^9}, {3.666884907793552*^9, 
   3.666884957081893*^9}, 3.666904353168388*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "Given", " ", "binary", " ", "string", " ", "represented", " ", "Hack", 
     " ", "code"}], ",", " ", 
    RowBox[{
    "create", " ", "its", " ", "textual", " ", "representation", " ", 
     "including", " ", "end", " ", "of", " ", 
     RowBox[{"line", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"HackCodeInStringWithUpdatedSymbols", "[", 
     RowBox[{"rawText_", ",", " ", "initialSymbols_"}], "]"}], ":=", " ", 
    RowBox[{"Module", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"arrayOfLines", " ", "=", " ", 
         RowBox[{"{", "}"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"asmArray", " ", "=", " ", 
         RowBox[{"{", "}"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"binaryCodeArray", " ", "=", " ", 
         RowBox[{"{", "}"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"binaryCodeString", "=", "\"\<\>\""}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"rawTextualInstructions", "=", 
         RowBox[{"{", "}"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"instructionSetWithoutLineComments", "=", 
         RowBox[{"{", "}"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"labelCollectionResult", "=", 
         RowBox[{"{", "}"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"updatedSymbols", "=", 
         RowBox[{"{", "}"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"symbolsWithRamAddress", " ", "=", 
         RowBox[{"{", "}"}]}]}], "\[IndentingNewLine]", "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"arrayOfLines", "=", " ", 
        RowBox[{"StringSplit", "[", 
         RowBox[{"rawText", ",", " ", "\"\<\\n\>\""}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", "arrayOfLines", "]"}], "\[LessEqual]", "0"}],
          ",", " ", "\[IndentingNewLine]", 
         RowBox[{"(*", "Then", "*)"}], " ", 
         RowBox[{
          RowBox[{"Print", "[", "\"\<No Text to be translated\>\"", "]"}], 
          ";", " ", 
          RowBox[{"Return", " ", "Null"}]}]}], "\[IndentingNewLine]", "]"}], 
       ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"rawTextualInstructions", "=", 
        RowBox[{"CollectInstruction", "[", "arrayOfLines", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
         RowBox[{"Print", "[", "rawTextualInstructions", "]"}], ";"}], " ", 
        "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"labelCollectionResult", " ", "=", 
        RowBox[{"CollectLabels", "[", 
         RowBox[{"rawTextualInstructions", ",", "initialSymbols"}], "]"}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"updatedSymbols", "=", " ", 
        RowBox[{
        "labelCollectionResult", "\[LeftDoubleBracket]", "1", 
         "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"instructionSetWithoutLineComments", "=", 
        RowBox[{"Map", "[", 
         RowBox[{"StripComment", ",", 
          RowBox[{"Delete", "[", 
           RowBox[{"rawTextualInstructions", ",", " ", 
            RowBox[{
            "labelCollectionResult", "\[LeftDoubleBracket]", "2", 
             "\[RightDoubleBracket]"}]}], "]"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"symbolsWithRamAddress", "=", 
        RowBox[{"CollectRamAddress", "[", 
         RowBox[{
         "instructionSetWithoutLineComments", ",", " ", "updatedSymbols"}], 
         "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"binaryCodeArray", "=", 
        RowBox[{"TranslateInstructionWithUpdatedSymbols", "[", 
         RowBox[{
         "instructionSetWithoutLineComments", ",", "\[IndentingNewLine]", 
          "symbolsWithRamAddress"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
         RowBox[{"Print", "[", "binaryCodeArray", "]"}], ";"}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", "binaryCodeArray", "]"}], "\[LessEqual]", 
          "0"}], ",", " ", "\[IndentingNewLine]", 
         RowBox[{"(*", "Then", "*)"}], " ", 
         RowBox[{"Print", "[", "\"\<No Code to be translated\>\"", "]"}], ",",
          "\[IndentingNewLine]", 
         RowBox[{"(*", "Else", "*)"}], " ", 
         RowBox[{"binaryCodeString", " ", "=", 
          RowBox[{"StringJoin", "[", 
           RowBox[{"Map", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"#", "<>", "\"\<\\n\>\""}], ")"}], "&"}], ",", " ", 
             "binaryCodeArray"}], "]"}], "]"}]}]}], "\[IndentingNewLine]", 
        "]"}], ";", "\[IndentingNewLine]", "binaryCodeString"}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}]}]], "Input",
 CellChangeTimes->{{3.66688195209089*^9, 3.6668819555206337`*^9}, {
   3.6668822876602182`*^9, 3.666882329170483*^9}, {3.666882370939492*^9, 
   3.6668824807621202`*^9}, {3.666882622107411*^9, 3.6668826619486217`*^9}, {
   3.666882741518502*^9, 3.666882742902194*^9}, {3.666882790589274*^9, 
   3.6668828673569517`*^9}, {3.6668829111788692`*^9, 3.666882968283072*^9}, {
   3.666883115614708*^9, 3.666883118069502*^9}, {3.666883310809683*^9, 
   3.666883313183803*^9}, {3.6668850137391987`*^9, 3.6668850604985313`*^9}, {
   3.6669048111458597`*^9, 3.666904836140476*^9}, {3.666904910486253*^9, 
   3.6669049150767393`*^9}, 3.666908225848999*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Testing", " ", "Code", " ", "using", " ", "the", " ", 
    RowBox[{"Add", ".", "asm"}], " ", "Hack", " ", "Assembly", " ", "code"}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"rawText", "=", 
     RowBox[{"Import", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\<../add/\>\"", 
        "<>", "\"\<Add.asm\>\""}], ",", " ", "\"\<Text\>\""}], "]"}]}], ";"}],
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"binaryCodeInString", "=", 
     RowBox[{"HackCodeInStringWithUpdatedSymbols", "[", 
      RowBox[{"rawText", ",", " ", "SymbolTable"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Export", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\<Add.hack\>\""}], 
     ",", "binaryCodeInString", ",", "\"\<Text\>\""}], "]"}]}]}]], "Input",
 CellChangeTimes->{
  3.666882058720066*^9, {3.666882994476836*^9, 3.6668829994491787`*^9}}],

Cell[CellGroupData[{

Cell[BoxData["\<\"Not a new symbol:2\"\>"], "Print",
 CellChangeTimes->{3.666885122062189*^9, 3.666908257051626*^9}],

Cell[BoxData["\<\"Not a new symbol:3\"\>"], "Print",
 CellChangeTimes->{3.666885122062189*^9, 3.6669082570590973`*^9}],

Cell[BoxData["\<\"Not a new symbol:0\"\>"], "Print",
 CellChangeTimes->{3.666885122062189*^9, 3.666908257069292*^9}]
}, Open  ]],

Cell[BoxData["\<\"/Users/bkoo/Documents/Workspace/GitRepos/nand2tetris/06/\
Mathematica/Add.hack\"\>"], "Output",
 CellChangeTimes->{3.666908257119307*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Testing", " ", "Code", " ", "using", " ", "the", " ", 
    RowBox[{"MaxL", ".", "asm"}], " ", "Hack", " ", "Assembly", " ", "code"}],
    "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"rawText", "=", 
     RowBox[{"Import", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\<../max/\>\"", 
        "<>", "\"\<Max.asm\>\""}], ",", " ", "\"\<Text\>\""}], "]"}]}], ";"}],
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"binaryCodeInString", "=", 
     RowBox[{"HackCodeInStringWithUpdatedSymbols", "[", 
      RowBox[{"rawText", ",", " ", "SymbolTable"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Export", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\<Max.hack\>\""}], 
     ",", "binaryCodeInString", ",", "\"\<Text\>\""}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.666883197466*^9, 3.666883223183661*^9}}],

Cell[CellGroupData[{

Cell[BoxData["\<\" Already Exists: R0\"\>"], "Print",
 CellChangeTimes->{{3.666883209899167*^9, 3.6668832431624727`*^9}, 
   3.666883322808284*^9, 3.666883392169442*^9, 3.666908262536708*^9}],

Cell[BoxData["\<\" Already Exists: R1\"\>"], "Print",
 CellChangeTimes->{{3.666883209899167*^9, 3.6668832431624727`*^9}, 
   3.666883322808284*^9, 3.666883392169442*^9, 3.666908262546542*^9}],

Cell[BoxData["\<\" Already Exists: OUTPUT_FIRST\"\>"], "Print",
 CellChangeTimes->{{3.666883209899167*^9, 3.6668832431624727`*^9}, 
   3.666883322808284*^9, 3.666883392169442*^9, 3.66690826255665*^9}],

Cell[BoxData["\<\" Already Exists: R1\"\>"], "Print",
 CellChangeTimes->{{3.666883209899167*^9, 3.6668832431624727`*^9}, 
   3.666883322808284*^9, 3.666883392169442*^9, 3.666908262566471*^9}],

Cell[BoxData["\<\" Already Exists: OUTPUT_D\"\>"], "Print",
 CellChangeTimes->{{3.666883209899167*^9, 3.6668832431624727`*^9}, 
   3.666883322808284*^9, 3.666883392169442*^9, 3.666908262576473*^9}],

Cell[BoxData["\<\" Already Exists: R0\"\>"], "Print",
 CellChangeTimes->{{3.666883209899167*^9, 3.6668832431624727`*^9}, 
   3.666883322808284*^9, 3.666883392169442*^9, 3.666908262586398*^9}],

Cell[BoxData["\<\" Already Exists: R2\"\>"], "Print",
 CellChangeTimes->{{3.666883209899167*^9, 3.6668832431624727`*^9}, 
   3.666883322808284*^9, 3.666883392169442*^9, 3.666908262596306*^9}],

Cell[BoxData["\<\" Already Exists: INFINITE_LOOP\"\>"], "Print",
 CellChangeTimes->{{3.666883209899167*^9, 3.6668832431624727`*^9}, 
   3.666883322808284*^9, 3.666883392169442*^9, 3.6669082626060762`*^9}],

Cell[BoxData["\<\"To be used to look up address:R0\"\>"], "Print",
 CellChangeTimes->{{3.666883209899167*^9, 3.6668832431624727`*^9}, 
   3.666883322808284*^9, 3.666883392169442*^9, 3.66690826261591*^9}],

Cell[BoxData["\<\"To be used to look up address:R1\"\>"], "Print",
 CellChangeTimes->{{3.666883209899167*^9, 3.6668832431624727`*^9}, 
   3.666883322808284*^9, 3.666883392169442*^9, 3.666908262625848*^9}],

Cell[BoxData["\<\"To be used to look up address:OUTPUT_FIRST\"\>"], "Print",
 CellChangeTimes->{{3.666883209899167*^9, 3.6668832431624727`*^9}, 
   3.666883322808284*^9, 3.666883392169442*^9, 3.666908262638143*^9}],

Cell[BoxData["\<\"To be used to look up address:R1\"\>"], "Print",
 CellChangeTimes->{{3.666883209899167*^9, 3.6668832431624727`*^9}, 
   3.666883322808284*^9, 3.666883392169442*^9, 3.666908262650401*^9}],

Cell[BoxData["\<\"To be used to look up address:OUTPUT_D\"\>"], "Print",
 CellChangeTimes->{{3.666883209899167*^9, 3.6668832431624727`*^9}, 
   3.666883322808284*^9, 3.666883392169442*^9, 3.666908262662554*^9}],

Cell[BoxData["\<\"To be used to look up address:R0\"\>"], "Print",
 CellChangeTimes->{{3.666883209899167*^9, 3.6668832431624727`*^9}, 
   3.666883322808284*^9, 3.666883392169442*^9, 3.666908262674861*^9}],

Cell[BoxData["\<\"To be used to look up address:R2\"\>"], "Print",
 CellChangeTimes->{{3.666883209899167*^9, 3.6668832431624727`*^9}, 
   3.666883322808284*^9, 3.666883392169442*^9, 3.6669082626874123`*^9}],

Cell[BoxData["\<\"To be used to look up address:INFINITE_LOOP\"\>"], "Print",
 CellChangeTimes->{{3.666883209899167*^9, 3.6668832431624727`*^9}, 
   3.666883322808284*^9, 3.666883392169442*^9, 3.666908262699641*^9}]
}, Open  ]],

Cell[BoxData["\<\"/Users/bkoo/Documents/Workspace/GitRepos/nand2tetris/06/\
Mathematica/Max.hack\"\>"], "Output",
 CellChangeTimes->{{3.666883209962481*^9, 3.666883243214982*^9}, 
   3.666883322858802*^9, 3.666883392221766*^9, 3.6669082627529373`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Testing", " ", "Code", " ", "using", " ", "the", " ", 
    RowBox[{"RectL", ".", "asm"}], " ", "Hack", " ", "Assembly", " ", 
    "code"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"rawText", "=", 
     RowBox[{"Import", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\<../rect/\>\"", 
        "<>", "\"\<Rect.asm\>\""}], ",", " ", "\"\<Text\>\""}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"binaryCodeInString", "=", 
     RowBox[{"HackCodeInStringWithUpdatedSymbols", "[", 
      RowBox[{"rawText", ",", "SymbolTable"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Export", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\<Rect.hack\>\""}], 
     ",", "binaryCodeInString", ",", "\"\<Text\>\""}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.666883539387471*^9, 3.666883553981019*^9}}],

Cell[CellGroupData[{

Cell[BoxData["\<\"Not a new symbol:0\"\>"], "Print",
 CellChangeTimes->{3.6668835556364517`*^9, 3.666885071387656*^9, 
  3.666908266564046*^9}],

Cell[BoxData["\<\" Already Exists: INFINITE_LOOP\"\>"], "Print",
 CellChangeTimes->{3.6668835556364517`*^9, 3.666885071387656*^9, 
  3.66690826656911*^9}],

Cell[BoxData["\<\" Already Exists: SCREEN\"\>"], "Print",
 CellChangeTimes->{3.6668835556364517`*^9, 3.666885071387656*^9, 
  3.666908266576729*^9}],

Cell[BoxData["\<\" Already Exists: address\"\>"], "Print",
 CellChangeTimes->{3.6668835556364517`*^9, 3.666885071387656*^9, 
  3.6669082665795097`*^9}],

Cell[BoxData["\<\" Already Exists: address\"\>"], "Print",
 CellChangeTimes->{3.6668835556364517`*^9, 3.666885071387656*^9, 
  3.66690826658223*^9}],

Cell[BoxData["\<\"Not a new symbol:32\"\>"], "Print",
 CellChangeTimes->{3.6668835556364517`*^9, 3.666885071387656*^9, 
  3.6669082665848837`*^9}],

Cell[BoxData["\<\" Already Exists: address\"\>"], "Print",
 CellChangeTimes->{3.6668835556364517`*^9, 3.666885071387656*^9, 
  3.6669082665877037`*^9}],

Cell[BoxData["\<\" Already Exists: counter\"\>"], "Print",
 CellChangeTimes->{3.6668835556364517`*^9, 3.666885071387656*^9, 
  3.666908266590494*^9}],

Cell[BoxData["\<\" Already Exists: LOOP\"\>"], "Print",
 CellChangeTimes->{3.6668835556364517`*^9, 3.666885071387656*^9, 
  3.666908266593184*^9}],

Cell[BoxData["\<\" Already Exists: INFINITE_LOOP\"\>"], "Print",
 CellChangeTimes->{3.6668835556364517`*^9, 3.666885071387656*^9, 
  3.6669082665958643`*^9}],

Cell[BoxData["\<\"To be used to look up address:INFINITE_LOOP\"\>"], "Print",
 CellChangeTimes->{3.6668835556364517`*^9, 3.666885071387656*^9, 
  3.666908266600938*^9}],

Cell[BoxData["\<\"To be used to look up address:counter\"\>"], "Print",
 CellChangeTimes->{3.6668835556364517`*^9, 3.666885071387656*^9, 
  3.666908266605975*^9}],

Cell[BoxData["\<\"To be used to look up address:SCREEN\"\>"], "Print",
 CellChangeTimes->{3.6668835556364517`*^9, 3.666885071387656*^9, 
  3.666908266611026*^9}],

Cell[BoxData["\<\"To be used to look up address:address\"\>"], "Print",
 CellChangeTimes->{3.6668835556364517`*^9, 3.666885071387656*^9, 
  3.666908266616064*^9}],

Cell[BoxData["\<\"To be used to look up address:address\"\>"], "Print",
 CellChangeTimes->{3.6668835556364517`*^9, 3.666885071387656*^9, 
  3.6669082666210403`*^9}],

Cell[BoxData["\<\"To be used to look up address:address\"\>"], "Print",
 CellChangeTimes->{3.6668835556364517`*^9, 3.666885071387656*^9, 
  3.666908266626067*^9}],

Cell[BoxData["\<\"To be used to look up address:address\"\>"], "Print",
 CellChangeTimes->{3.6668835556364517`*^9, 3.666885071387656*^9, 
  3.6669082666310253`*^9}],

Cell[BoxData["\<\"To be used to look up address:counter\"\>"], "Print",
 CellChangeTimes->{3.6668835556364517`*^9, 3.666885071387656*^9, 
  3.6669082666360283`*^9}],

Cell[BoxData["\<\"To be used to look up address:LOOP\"\>"], "Print",
 CellChangeTimes->{3.6668835556364517`*^9, 3.666885071387656*^9, 
  3.666908266641078*^9}],

Cell[BoxData["\<\"To be used to look up address:INFINITE_LOOP\"\>"], "Print",
 CellChangeTimes->{3.6668835556364517`*^9, 3.666885071387656*^9, 
  3.666908266646039*^9}]
}, Open  ]],

Cell[BoxData["\<\"/Users/bkoo/Documents/Workspace/GitRepos/nand2tetris/06/\
Mathematica/Rect.hack\"\>"], "Output",
 CellChangeTimes->{3.6669082666692257`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Testing", " ", "Code", " ", "using", " ", "the", " ", 
    RowBox[{"RectL", ".", "asm"}], " ", "Hack", " ", "Assembly", " ", 
    "code"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"rawText", "=", 
     RowBox[{"Import", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\<../pong/\>\"", 
        "<>", "\"\<Pong.asm\>\""}], ",", " ", "\"\<Text\>\""}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"binaryCodeInString", "=", 
     RowBox[{"HackCodeInStringWithUpdatedSymbols", "[", 
      RowBox[{"rawText", ",", "SymbolTable"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Export", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\<Rect.hack\>\""}], 
     ",", "binaryCodeInString", ",", "\"\<Text\>\""}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.6669083521154222`*^9, 3.666908356682304*^9}}]
},
WindowSize->{808, 811},
WindowMargins->{{Automatic, 186}, {Automatic, 0}},
FrontEndVersion->"10.4 for Mac OS X x86 (32-bit, 64-bit Kernel) (February 25, \
2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 10836, 230, 1185, "Input"],
Cell[11397, 252, 438, 6, 28, "Input"],
Cell[11838, 260, 5691, 120, 709, "Input"],
Cell[CellGroupData[{
Cell[17554, 384, 1019, 26, 80, "Input"],
Cell[CellGroupData[{
Cell[18598, 414, 116, 1, 22, "Print"],
Cell[18717, 417, 118, 1, 22, "Print"],
Cell[18838, 420, 116, 1, 22, "Print"]
}, Open  ]],
Cell[18969, 424, 155, 2, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[19161, 431, 990, 25, 80, "Input"],
Cell[CellGroupData[{
Cell[20176, 460, 191, 2, 22, "Print"],
Cell[20370, 464, 191, 2, 22, "Print"],
Cell[20564, 468, 200, 2, 22, "Print"],
Cell[20767, 472, 191, 2, 22, "Print"],
Cell[20961, 476, 197, 2, 22, "Print"],
Cell[21161, 480, 191, 2, 22, "Print"],
Cell[21355, 484, 191, 2, 22, "Print"],
Cell[21549, 488, 204, 2, 22, "Print"],
Cell[21756, 492, 203, 2, 22, "Print"],
Cell[21962, 496, 204, 2, 22, "Print"],
Cell[22169, 500, 214, 2, 22, "Print"],
Cell[22386, 504, 204, 2, 22, "Print"],
Cell[22593, 508, 210, 2, 22, "Print"],
Cell[22806, 512, 204, 2, 22, "Print"],
Cell[23013, 516, 206, 2, 22, "Print"],
Cell[23222, 520, 215, 2, 22, "Print"]
}, Open  ]],
Cell[23452, 525, 251, 3, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[23740, 533, 994, 25, 80, "Input"],
Cell[CellGroupData[{
Cell[24759, 562, 143, 2, 22, "Print"],
Cell[24905, 566, 154, 2, 22, "Print"],
Cell[25062, 570, 148, 2, 22, "Print"],
Cell[25213, 574, 151, 2, 22, "Print"],
Cell[25367, 578, 148, 2, 22, "Print"],
Cell[25518, 582, 146, 2, 22, "Print"],
Cell[25667, 586, 151, 2, 22, "Print"],
Cell[25821, 590, 149, 2, 22, "Print"],
Cell[25973, 594, 146, 2, 22, "Print"],
Cell[26122, 598, 157, 2, 22, "Print"],
Cell[26282, 602, 168, 2, 22, "Print"],
Cell[26453, 606, 162, 2, 22, "Print"],
Cell[26618, 610, 161, 2, 22, "Print"],
Cell[26782, 614, 162, 2, 22, "Print"],
Cell[26947, 618, 164, 2, 22, "Print"],
Cell[27114, 622, 162, 2, 22, "Print"],
Cell[27279, 626, 164, 2, 22, "Print"],
Cell[27446, 630, 164, 2, 22, "Print"],
Cell[27613, 634, 159, 2, 22, "Print"],
Cell[27775, 638, 168, 2, 22, "Print"]
}, Open  ]],
Cell[27958, 643, 158, 2, 28, "Output"]
}, Open  ]],
Cell[28131, 648, 996, 25, 80, "Input"]
}
]
*)

